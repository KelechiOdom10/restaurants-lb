---
import ProductCard from "./ProductCard.astro";
interface Props {
  products: Array<{
    id: string;
    name: string;
    category: string;
    description: string;
    price: number;
    image: string;
  }>;
}

const { products } = Astro.props;
---

<section
  class="mx-auto grid w-full max-w-8xl grid-cols-1 gap-7 p-8 xs:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 2xl:px-0"
>
  {products.map((product) => <ProductCard product={product} />)}
</section>

<script>
  import {
    addToCart,
    isAddingToCart,
    subscribeToShoppingCartChange,
  } from "../stores";

  document.addEventListener("DOMContentLoaded", () => {
    const productCardButtons = document.querySelectorAll(".add-to-cart");

    productCardButtons.forEach((button) => {
      button.addEventListener("click", () => {
        const input = button.parentElement?.querySelector(
          'input[name="product-quantity-input"]'
        ) as HTMLInputElement;
        // Extract the product information from the button's data attribute
        const productId = button.getAttribute("data-product-id") ?? "";
        const productName = button.getAttribute("data-product-name") ?? "";
        const productImage = button.getAttribute("data-product-image") ?? "";
        const productPrice = parseInt(
          button.getAttribute("data-product-price") ?? "0"
        );
        const quantity = parseInt(input?.value ?? "1");

        // Create a CartItem object
        const cartItem = {
          id: productId,
          image: productImage,
          name: productName,
          price: productPrice,
          quantity,
        };

        // Add the product to the shopping cart and update the cart icon
        addToCart(cartItem, quantity);
        subscribeToShoppingCartChange(() => {
          const addingToCart = isAddingToCart.get();
          isAddingToCart.set(!addingToCart);
          input.value = "1";
        });
      });
    });
  });
</script>
